{
  "openapi": "3.0.3",
  "info": {
    "title": "TourAxis API",
    "description": "A simple CRUD API for Users and their Tasks.",
    "version": "1.0.0",
    "contact": {
      "name": "Wiaan Botha",
      "email": "wiaan.dev@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000/",
      "description": "Local server"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "API for Users in the system"
    },
    {
      "name": "Tasks",
      "description": "API for Tasks in the system"
    }
  ],
  "paths": {
    "/api/users": {
      "get": {
        "tags": ["Users"],
        "description": "Get users",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "500": {
            "description": "Could not fetch the users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Something went wrong when trying to fetch the Users",
                  "internal_code": 500
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "description": "Create a new user",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Required fields not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Username is required",
                  "internal_code": 404
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": ["Users"],
        "description": "Get a user by ID",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "User not found",
                  "internal_code": 404
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "description": "Update a user by ID",
        "operationId": "updateUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "User not found",
                  "internal_code": 404
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          }
        }
      },
      "Users": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "internal_code": {
            "type": "number"
          }
        }
      }
    }
  }
}
